name: Weekly story update (public domain)

on:
  schedule:
    # 매주 월요일 00:00 UTC (한국 09:00 KST)
    - cron: "0 0 * * 1"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch-story:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Fetch random fable
        run: |
          python - << 'PY'
          import os, json, random, datetime, requests, re

          # Project Gutenberg Aesop's Fables (영문 텍스트)
          URL = "https://www.gutenberg.org/cache/epub/11339/pg11339.txt"
          r = requests.get(URL, timeout=30)
          text = r.text

          # 단순 전처리: 너무 짧은 줄 제외, 빈 줄 기준으로 이야기 분리
          parts = [p.strip() for p in text.split("\n\n") if len(p.strip().split())>30]

          # 무작위로 한 이야기 선택
          story = random.choice(parts)

          # 문장 단위로 나누기 (마침표, 느낌표, 물음표 기준)
          sentences = re.split(r'(?<=[.!?])\s+', story)
          # 앞에서 10~15문장만 가져오기
          pick = sentences[:15]

          out = {
              "date": datetime.date.today().isoformat(),
              "story": {
                  "title": pick[0][:50] + "...",  # 첫 문장 일부를 제목으로
                  "lines": [{"en": s.strip()} for s in pick if s.strip()]
              }
          }

          os.makedirs("data", exist_ok=True)
          os.makedirs("data/archive", exist_ok=True)

          # 이번 주 이야기 저장
          with open("data/story.json","w",encoding="utf-8") as f:
              json.dump(out,f,ensure_ascii=False,indent=2)

          # 아카이브 저장
          with open(f"data/archive/{out['date']}.json","w",encoding="utf-8") as f:
              json.dump(out,f,ensure_ascii=False,indent=2)

          print("Saved story for", out["date"], ":", out["story"]["title"])
          PY

      - name: Commit & push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes"
          else
            git commit -m "chore(data): weekly public domain story update [skip ci]"
            git push
          fi
